import React, { useState } from "react";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession, getSession } from "next-auth/client";
import { WEBSITE_URL } from "../../constants";

export default function index() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [failed, setFailed] = useState(false);
  const [error, setError] = useState({
    email: "",
    password: "",
  });
  const [emailErr, setEmailErr] = useState(null);
  const [passErr, setPassErr] = useState(null);

  const handleLoginForm = async (e) => {
    e.preventDefault();
    setFailed(false);

    try {
      if (email !== "" && password !== "") {
        signIn("credentials", {
          email,
          password,
          callbackUrl: `${WEBSITE_URL}/login`,
        });
      }
      if (password === "" || password === null) {
        setPassErr("Vul een wachtwoord in");
      }
    } catch (e) {
      console.log(e);
      setFailed(true);
    }
  };

  console.log(error);
  return (
    <section className="auth-grid">
      <Head>
        <title>Login Leerkracht - BuddyGram</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/smiley.png" />
      </Head>

      <div className="yellow-grid"></div>

      <div className="form__login-container">
        <p className="text__m-bold">BuddyGram</p>
        <h1 className="title__m-bold">
          <marker className="mark-yellow">Login</marker> als leerkracht
        </h1>
        {failed ? (
          <p style={{ color: "var(--red);" }}>
            Uw wachtwoord of email is fout.
          </p>
        ) : (
          ""
        )}
        <form onSubmit={handleLoginForm} className="form__login">
          <div className="auth__wrapper-login">
            <div className="label__wrapper">
              <p style={{ color: "var(--red)" }} className="title__xs-bold">
                {emailErr}
              </p>
              <label className="title__xs-bold" htmlFor="email">
                Email:
              </label>
              <input
                onChange={(e) => {
                  setEmail(e.currentTarget.value);
                  if (/.+@.+\.[A-Za-z]+$/.test(email)) {
                    console.log("true");
                    setEmailErr(null);
                  } else {
                    console.log("false");
                    setEmailErr("Uw email voldoet niet aan het juiste formaat");
                  }
                }}
                type="email"
                name="email"
                id="email"
                value={email}
                placeholder="john@teacher.com"
                className="auth-input"
                style={{ minWidth: "40rem" }}
              />
            </div>

            <div className="label__wrapper">
              <p className="title__xs-bold">{passErr}</p>
              <label className="title__xs-bold" htmlFor="wachtwoord">
                Wachtwoord:
              </label>
              <input
                onChange={(e) => {
                  setPassword(e.currentTarget.value);
                  if (password === "" || password === " ") {
                    setPassErr("Vul een wachtwoord in");
                  } else {
                    setPassErr("");
                  }
                }}
                type="password"
                value={password}
                id="wachtwoord"
                name="wachtwoord"
                placeholder="Typ jouw wachtwoord hier..."
                className="auth-input"
                style={{ minWidth: "40rem" }}
              />
            </div>
          </div>

          <input
            className="form__auth--button button-primary-blue"
            value="inloggen"
            type="submit"
          />
        </form>
        <div className="form__login-alreadyRegistered flex-horizontal p-small auth-">
          <p>Nog geen account?</p>
          <Link href="/register">
            <span
              style={{ marginLeft: "0.5rem", cursor: "pointer" }}
              className="bold blue"
            >
              Registreer als leerkracht
            </span>
          </Link>
        </div>
      </div>
    </section>
  );
}

export async function getServerSideProps(ctx) {
  const session = await getSession(ctx);
  console.log(session?.user?.user?.id);
  if (session?.user) {
    return {
      redirect: {
        destination: "/dashboard",
        permanent: false,
      },
    };
  }
  return {
    props: {},
  };
}
